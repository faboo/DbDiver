<Application x:Class="DbDiver.App"
						 x:Name="App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:s="clr-namespace:System;assembly=mscorlib"
             xmlns:mwt="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
						 xmlns:src="clr-namespace:DbDiver">
<Application.Resources>

	<Style x:Key="KeyCombo"  TargetType="ComboBox">
		<Setter Property="IsEditable" Value="false" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ComboBox">
					<Grid Name="MainGrid" SnapsToDevicePixels="True">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="0" MinWidth="5" />
						</Grid.ColumnDefinitions>
						<Popup IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" AllowsTransparency="True" Name="PART_Popup" Margin="1,1,1,1" Grid.ColumnSpan="2">
							<mwt:SystemDropShadowChrome Color="#00FFFFFF" Name="Shdw" MinWidth="0" MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
								<Border BorderThickness="1,1,1,1" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" Name="DropDownBorder">
									<ScrollViewer CanContentScroll="True">
										<ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" KeyboardNavigation.DirectionalNavigation="Contained" />
									</ScrollViewer>
								</Border>
							</mwt:SystemDropShadowChrome>
						</Popup>
						<ToggleButton Name="toggle"  IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" Grid.ColumnSpan="2">
							<ToggleButton.Style>
								<Style TargetType="ToggleButton">
									<Style.Resources>
										<ResourceDictionary />
									</Style.Resources>
									<Setter Property="FrameworkElement.OverridesDefaultStyle">
										<Setter.Value>
											<s:Boolean>True</s:Boolean>
										</Setter.Value>
									</Setter>
									<Setter Property="KeyboardNavigation.IsTabStop">
										<Setter.Value>
											<s:Boolean>False</s:Boolean>
										</Setter.Value>
									</Setter>
									<Setter Property="UIElement.Focusable">
										<Setter.Value>
											<s:Boolean>False</s:Boolean>
										</Setter.Value>
									</Setter>
									<Setter Property="ButtonBase.ClickMode">
										<Setter.Value>
											<x:Static Member="ClickMode.Press" />
										</Setter.Value>
									</Setter>
									<Setter Property="Control.Template">
										<Setter.Value>
											<ControlTemplate TargetType="ToggleButton">
												<mwt:ButtonChrome Background="{TemplateBinding Panel.Background}" BorderBrush="{TemplateBinding Border.BorderBrush}" RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}" RenderPressed="{TemplateBinding ButtonBase.IsPressed}" Name="Chrome" SnapsToDevicePixels="True">
													<Grid Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" HorizontalAlignment="Right">
														<Path Data="M0,0L3.5,4 7,0z" Fill="#FF000000" Name="Arrow" Margin="3,1,0,0" HorizontalAlignment="Center" VerticalAlignment="Center" />
													</Grid>
												</mwt:ButtonChrome>
												<ControlTemplate.Triggers>
													<Trigger Property="ToggleButton.IsChecked">
														<Setter TargetName="Chrome" Property="mwt:ButtonChrome.RenderPressed">
															<Setter.Value>
																<s:Boolean>True</s:Boolean>
															</Setter.Value>
														</Setter>
														<Trigger.Value>
															<s:Boolean>True</s:Boolean>
														</Trigger.Value>
													</Trigger>
													<Trigger Property="UIElement.IsEnabled">
														<Setter TargetName="Arrow" Property="Shape.Fill">
															<Setter.Value>
																<SolidColorBrush>#FFAFAFAF</SolidColorBrush>
															</Setter.Value>
														</Setter>
														<Trigger.Value>
															<s:Boolean>False</s:Boolean>
														</Trigger.Value>
													</Trigger>
												</ControlTemplate.Triggers>
											</ControlTemplate>
										</Setter.Value>
									</Setter>
								</Style>
							</ToggleButton.Style>
						</ToggleButton>
						<Image Height="16" Width="16" Margin="8" Source="1367512141_42264_red.ico" IsHitTestVisible="False" />
						<!--<ContentPresenter Visibility="Hidden"  Content="{TemplateBinding ComboBox.SelectionBoxItem}" ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}" ContentStringFormat="{TemplateBinding ComboBox.SelectionBoxItemStringFormat}" Margin="{TemplateBinding Control.Padding}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" IsHitTestVisible="False" />-->
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="Popup.HasDropShadow" SourceName="PART_Popup">
							<Setter TargetName="Shdw" Property="FrameworkElement.Margin">
								<Setter.Value>
									<Thickness>0,0,5,5</Thickness>
								</Setter.Value>
							</Setter>
							<Setter TargetName="Shdw" Property="mwt:SystemDropShadowChrome.Color">
								<Setter.Value>
									<Color>#71000000</Color>
								</Setter.Value>
							</Setter>
							<Trigger.Value>
								<s:Boolean>True</s:Boolean>
							</Trigger.Value>
						</Trigger>
						<Trigger Property="ItemsControl.HasItems">
							<Setter TargetName="DropDownBorder" Property="FrameworkElement.Height">
								<Setter.Value>
									<s:Double>95</s:Double>
								</Setter.Value>
							</Setter>
							<Trigger.Value>
								<s:Boolean>False</s:Boolean>
							</Trigger.Value>
						</Trigger>
						<Trigger Property="UIElement.IsEnabled">
							<Setter Property="TextElement.Foreground">
								<Setter.Value>
									<DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
								</Setter.Value>
							</Setter>
							<Setter Property="Panel.Background">
								<Setter.Value>
									<SolidColorBrush>#FFF4F4F4</SolidColorBrush>
								</Setter.Value>
							</Setter>
							<Trigger.Value>
								<s:Boolean>False</s:Boolean>
							</Trigger.Value>
						</Trigger>
						<Trigger Property="ItemsControl.IsGrouping">
							<Setter Property="ScrollViewer.CanContentScroll">
								<Setter.Value>
									<s:Boolean>False</s:Boolean>
								</Setter.Value>
							</Setter>
							<Trigger.Value>
								<s:Boolean>True</s:Boolean>
							</Trigger.Value>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

		<Style x:Key="plainTextBox" TargetType="TextBox">
			<Setter Property="HorizontalAlignment" Value="Stretch" />
			<Setter Property="VerticalAlignment" Value="Stretch" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="TextBoxBase" >
						<ScrollViewer Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
						<ControlTemplate.Triggers>
							<Trigger Property="UIElement.IsEnabled" Value="false">
								<Setter Property="TextElement.Foreground">
									<Setter.Value>
										<DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
									</Setter.Value>
								</Setter>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<DataTemplate x:Key="cellDisplayKey" DataType="src:ColumnData">
			<Border Name="border">
				<TextBlock Text="{Binding Data}" TextAlignment="Right" HorizontalAlignment="Stretch" />
			</Border>

			<DataTemplate.Triggers>
				<DataTrigger Binding="{Binding Key}" Value="{x:Static src:KeyType.Primary}">
					<Setter TargetName="border"  Property="Background" Value="Gold" />
				</DataTrigger>
				<DataTrigger Binding="{Binding Key}" Value="{x:Static src:KeyType.Foreign}">
					<Setter TargetName="border"  Property="Background" Value="Gray" />
				</DataTrigger>
				<DataTrigger Binding="{Binding Key}" Value="{x:Static src:KeyType.Broken}">
					<Setter TargetName="border"  Property="Background" Value="#FF69B4" />
				</DataTrigger>
			</DataTemplate.Triggers>
		</DataTemplate>

		<DataTemplate x:Key="cellDisplayString" DataType="src:ColumnData">
			<TextBlock Text="{Binding Data}" />
		</DataTemplate>

		<DataTemplate x:Key="cellDisplayNumber" DataType="src:ColumnData">
			<TextBlock Text="{Binding Data}" TextAlignment="Right" />
		</DataTemplate>

		<DataTemplate x:Key="cellDisplayBoolean" DataType="src:ColumnData">
			<CheckBox IsChecked="{Binding Data}" HorizontalAlignment="Center" />
		</DataTemplate>


		<DataTemplate x:Key="cellEditPrimaryKey" DataType="src:ColumnData">
			<Border Name="border" Background="Gold">
				<TextBlock Text="{Binding Data}" TextAlignment="Right" HorizontalAlignment="Stretch" />
			</Border>
		</DataTemplate>

		<DataTemplate x:Key="cellEditForeignKey" DataType="src:ColumnData">
			<Border Name="border">
				<TextBlock Text="{Binding Data}" TextAlignment="Right" HorizontalAlignment="Stretch" />
			</Border>

			<DataTemplate.Triggers>
				<DataTrigger Binding="{Binding Key,Converter={x:Static src:KeyBoolConverter.Instance},ConverterParameter={x:Static src:KeyType.Foreign}}" Value="true">
					<Setter TargetName="border"  Property="Background" Value="Gray" />
				</DataTrigger>
				<!-- Could be foreign and primary -->
				<DataTrigger Binding="{Binding Key,Converter={x:Static src:KeyBoolConverter.Instance},ConverterParameter={x:Static src:KeyType.Primary}}" Value="true">
					<Setter TargetName="border"  Property="Background" Value="Gold" />
				</DataTrigger>
				<DataTrigger Binding="{Binding Key,Converter={x:Static src:KeyBoolConverter.Instance},ConverterParameter={x:Static src:KeyType.Broken}}" Value="true">
					<Setter TargetName="border"  Property="BorderBrush" Value="#FF69B4" />
					<Setter TargetName="border" Property="BorderThickness" Value="1" />
				</DataTrigger>
			</DataTemplate.Triggers>
		</DataTemplate>

		<DataTemplate x:Key="cellEditString" DataType="src:ColumnData">
			<TextBox Text="{Binding Data, Mode=TwoWay}" Style="{StaticResource plainTextBox}" />
		</DataTemplate>

		<DataTemplate x:Key="cellEditNumber" DataType="src:ColumnData">
			<TextBox Text="{Binding Data, Mode=TwoWay}" TextAlignment="Right" Style="{StaticResource plainTextBox}" />
		</DataTemplate>

		<DataTemplate x:Key="cellEditBoolean" DataType="src:ColumnData">
			<CheckBox IsChecked="{Binding Data, Mode=TwoWay}" HorizontalAlignment="Center" />
		</DataTemplate>

	</Application.Resources>
</Application>
